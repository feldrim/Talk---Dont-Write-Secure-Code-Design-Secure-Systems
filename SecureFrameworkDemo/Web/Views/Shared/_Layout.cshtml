@using Santhos.Web.Mvc.BootstrapFlashMessages;
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
	@Scripts.Render("~/bundles/jquery")
</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Insecure", "Index", "Insecure")</li>
					<li>@Html.ActionLink("Secure Features", "Index", "SecureFeature")</li>
					<li>@Html.ActionLink("Secure Framework", "Index", "SecureFramework")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
		@Html.Partial("_LoggedInUserSummary")
		@Html.FlashMessages(true)
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Seth Petry-Johnson</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)

	<!-- 
		ANTI-CSRF framework

		Create a forgery token that is injected into all forms dynamically. Any controller that inherits from
		SecureControllerBase contains automatic forgery token validation. These two pieces together mean that
		developers don't need to remember anything yet all forms are still protected
	-->
		<div id="AntiForgeryToken">
		@Html.AntiForgeryToken()
	</div>
	<script type="text/javascript">
		$(function () {
			// globally add the request verification token to all AJAX POSTs 
			$.ajaxPrefilter(function (options, originalOptions, jqXHR) {

				// HACK: Only doing this for the "SecureFramework" endpoints, so as not to interfere with
				// other examples
				var isSecureFrameworkArea = originalOptions.url.search(/SecureFramework/i) != -1;
				if (!isSecureFrameworkArea) {
					return;
				}

				if (originalOptions.type !== 'POST' || options.type !== 'POST') {
					return;
				}
				
				options.data = $.param($.extend({}, originalOptions.data, {
					"__RequestVerificationToken": $("#AntiForgeryToken > input").val()
				}));
			});

			// globally add the token to all FORM POSTs
			$("form").each(function () {
				var form = $(this);
				var tokenField = "__RequestVerificationToken";
				var alreadyHasToken = form.find("input[name='" + tokenField + "']").length > 0;

				if (alreadyHasToken) {
					return;
				}

				var tokenToClone = $("#AntiForgeryToken > input[name='" + tokenField + "'");
				tokenToClone
					.clone()
					.appendTo(form);
			});
		})
	</script>

</body>
</html>
