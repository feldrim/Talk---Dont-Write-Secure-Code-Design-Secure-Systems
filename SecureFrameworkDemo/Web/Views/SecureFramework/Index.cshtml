@{
	ViewBag.Title = "Secure Framework Demo - Home";
}

@Html.Partial("_IntraDemoNav", "Index")

<div class="jumbotron">
	<p>
		This area shows a simple set of features where the security concerns are all handled in framework code, leaving
		the app code free to deal with functional requirements.
	</p>
	<p>Compare the code in the <b>SecureFrameworkController</b> and related views to the other controllers.</p>
	<p><a class="btn btn-default" href="@Url.Action("OrderList", "SecureFramework")">Begin &raquo;</a></p>
</div>

<div class="row">
	<div class="col-md-4">
		<h2>Anonymous Access</h2>
		<p>
			All controllers are "secure by default". A list of URL patterns that allow anonymous access are maintained
			centrally in web.config.
		</p>
	</div>
	<div class="col-md-4">
		<h2>Page Authorization</h2>
		<p>
			Controller actions use a [RequiredPermission] attribute to implement page-level permissions.
		</p>
	</div>
	<div class="col-md-4">
		<h2>Access Control</h2>
		<p>
			Access control is implemented directly in the database using row-level security. Users without the <b>ManageOrders</b>
			permission are restricted to their data only, no app code needed.
		</p>
	</div>
</div>
<div class="row">
	<div class="col-md-4">
		<h2>Sensitive Data</h2>
		<p>
			View models are decorated with a PostSharp aspect attribute that specifies the permission necessary to view un-masked SSNs.
		</p>
	</div>
	<div class="col-md-4">
		<h2>Encryption</h2>
		<p>
			TODO
		</p>
	</div>
	<div class="col-md-4">
		<h2>Anti-CSRF</h2>
		<p>
			Anti-forgery tokens are added automatically to all forms, and validated automatically for all actions that inherit from
			<b>SecureControllerBase</b>. Developers literally need to do <i>nothing</i> to get forms protected from CSRF.
		</p>
	</div>
</div>